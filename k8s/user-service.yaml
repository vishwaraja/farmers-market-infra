# =============================================================================
# USER SERVICE DEPLOYMENT
# =============================================================================
# Sample user service deployment for Farmers Market

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: farmers-market
  labels:
    app: user-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        version: v1
    spec:
      containers:
      - name: user-service
        image: nginx:alpine  # Replace with your actual user service image
        ports:
        - containerPort: 80
        env:
        - name: SERVICE_NAME
          value: "user-service"
        - name: SERVICE_VERSION
          value: "v1"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        liveness_probe:
          http_get:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readiness_probe:
          http_get:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: farmers-market
  labels:
    app: user-service
spec:
  selector:
    app: user-service
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-config
  namespace: farmers-market
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    http {
        server {
            listen 80;
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            location /api/users {
                return 200 '{"message": "User service is running", "service": "user-service", "version": "v1"}';
                add_header Content-Type application/json;
            }
            location / {
                return 200 '{"message": "User service", "endpoints": ["/health", "/api/users"]}';
                add_header Content-Type application/json;
            }
        }
    }
